export ZSH_PLUGIN_DIR="$ZDOTDIR/plugins/"

autoload -Uz compinit && compinit
fpath+=("$ZDOTDIR/functions")

for ZSH_FILE in "${ZDOTDIR:-$HOME}"/zsh.d/*.zsh(N); do
    source "${ZSH_FILE}"
done

if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

alias vi="nvim"
# Alias to enter generic tmux session
alias tenter="tmux new -As main"
alias deventer="distrobox-enter dev -- tmux -L dev new -As main 'exec zsh'"
alias rm="rm -I"

function srcenv() {
    set -a; source .env; set +a
}

autoload -Uz zle-ls
zle -N zle-ls

autoload -Uz prepend-sudo
zle -N prepend-sudo

function zvm_vi_edit_command_line_custom() {
  local tmp_file=$(mktemp ${ZVM_TMPDIR}/zshXXXXXX.sh)
  echo "$BUFFER" >! "$tmp_file"
  "${(@Q)${(z)${ZVM_VI_EDITOR}}}" $tmp_file </dev/tty
  BUFFER=$(cat $tmp_file)
  rm "$tmp_file"
  case $ZVM_MODE in
    $ZVM_MODE_VISUAL|$ZVM_MODE_VISUAL_LINE)
      zvm_exit_visual_mode
      ;;
  esac
}

function before_init() {}
function after_init() {
    source <(fzf --zsh)
    eval "$(zoxide init zsh)"
    bindkey '\e;' autosuggest-accept
    zvm_define_widget zvm_vi_edit_command_line_custom
    zvm_bindkey visual 'v' zvm_vi_edit_command_line_custom 
    bindkey '\el' zle-ls
    bindkey '\es' prepend-sudo
}

zvm_before_init_commands=(before_init)
zvm_after_init_commands=(after_init)

plugins=(
    zsh-autosuggestions
    zsh-vi-mode
)
for plugin in $plugins
do
    source "$ZSH_PLUGIN_DIR/$plugin/$plugin.zsh"
done

eval "$(direnv hook zsh)"
eval "$(starship init zsh)"

# MUST BE AT END
source "$ZSH_PLUGIN_DIR/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
