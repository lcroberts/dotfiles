export ZSH_PLUGIN_DIR="$ZDOTDIR/plugins/"

autoload -Uz compinit && compinit
setopt no_complete_aliases
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion:*' menu select
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# formatting and messages
# http://www.masterzen.fr/2009/04/19/in-love-with-zsh-part-one/
zstyle ':completion:*' verbose yes
zstyle ':completion:*:descriptions' format "%B--- %d%b"
zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:corrections' format '%B%d (errors: %e)%b'
zstyle ':completion:*' group-name ''

if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# SSH Agent Setup
eval $(ssh-agent) > /dev/null 2>&1
find ~/.ssh -type f -name "*.pem" -o -name "*.key" -exec ssh-add {} > /dev/null 2>&1 \;

# Add stuff to path with deduplication
typeset -U path PATH # Make path dedupe values
path+=~/.local/nvim/bin
path+=~/.local/share/bob/nvim-bin
path+=~/.local/share/go/bin
path+=~/.npm-packages/bin
path+=~/.cargo/bin
path+=~/.local/bin
path+=~/Scripts
path+=~/.composer/vendor/bin
path+=/home/linuxbrew/.linuxbrew/bin
path+=~/.cargo/bin
path+=~/.local/bin
path+=~/Scripts

alias vi="nvim"
# Alias to enter generic tmux session
alias tenter="tmux new -As main"
alias deventer="distrobox-enter dev -- tmux -L dev new -As main 'exec zsh'"
# Hibernate alias
alias hibernate="systemctl hibernate"
alias rm="rm -I"

# git aliases
alias gs="git status"
alias gsw="git switch"
alias ga="git add"
alias gaa="git add ."
alias gc="git commit"
function gco() {
    if [[ -z "$1" ]]; then
        git checkout $(git branch | fzf)
    else
        git checkout $@
    fi
}
alias gb="git branch"
alias gd="git diff"
alias gp="git pull"
alias gf="git fetch"
alias gpu="git push"
alias gl="git log"
alias glo="git log --oneline"
alias glog="git log --oneline --graph"
alias gw="git worktree"
function r() {
    cd $(git rev-parse --show-toplevel)
}
function gwa() {
    if [[ -z "$1" ]]; then
        echo "Please provide a branch"
        return 1
    fi
    if git show-ref --verify --quiet refs/heads/$1; then
        echo "Branch exists"
        git worktree add $1 $1
    else
        echo "Branch doesn't exist"
        git worktree add -b $1 $1
    fi
}
function srcenv() {
    set -a; source .env; set +a
}

# eza aliases
eza_modifiers="--git --icons --color-scale --group-directories-first"
alias l="eza $eza_modifiers"
alias ls="eza $eza_modifiers -lhg"
alias ll="eza $eza_modifiers -lbhmag"
alias la="eza $eza_modifiers -a"
alias lt="eza $eza_modifiers --tree"
alias llt="eza $eza_modifiers --tree -a"
alias lx="eza $eza_modifiers -lbhHgmUa"

alias firefox="flatpak run org.mozilla.firefox"
alias protontricks="flatpak run com.github.Matoking.protontricks"
alias protontricks-launch="flatpak run --command=protontricks-launch com.github.Matoking.protontricks"

# Movement aliases
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."
alias .......="cd ../../../../../.."
alias ........="cd ../../../../../../.."
alias .........="cd ../../../../../../../.."
alias ..........="cd ../../../../../../../../.."
alias ...........="cd ../../../../../../../../../.."
alias ............="cd ../../../../../../../../../../.."
alias .............="cd ../../../../../../../../../../../.."
alias ..............="cd ../../../../../../../../../../../../.."
alias ...............="cd ../../../../../../../../../../../../../.."
alias ................="cd ../../../../../../../../../../../../../../.."

function r() {
    cd $(git rev-parse --show-toplevel)
}

function frun() {
    flatpak run (flatpak list --app | cut -f2 | fzf)
}

function tmp() {
    local tmp="/tmp/workspaces/$(xxd -l3 -ps /dev/urandom)"
    mkdir -p "$tmp"
    echo "$tmp"
    cd "$tmp"
}

function sd() {
    local dirr=$(find $argv | fzf-tmux -p 70%,75% --preview " [ -f {} ] && bat -f {} || eza -lah --color=always --tree {}")
    [ -d $dirr ] && cd $dirr && return
    [ -f $dirr ] && nvim $dirr && return
}

function pullall() {
    find "$HOME/Projects/" -maxdepth 3 -name -prune -o -type d -name .git -prune -print -exec git -C {}/.. pull \;
}

function showme() {
    if [[ -z "$@" ]]; then
        echo "Pass file to show"
        return 1
    fi
    local tmp="/tmp/workspaces/$(xxd -l3 -ps /dev/urandom)"
    mkdir -p "$tmp"
    7z x "$@" -o"$tmp"
    cd "$tmp" || return 1
    clear && l
}

function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	IFS= read -r -d '' cwd < "$tmp"
	[ -n "$cwd" ] && [ "$cwd" != "$PWD" ] && builtin cd -- "$cwd"
	rm -f -- "$tmp"
}

function zle-eval {
    zle push-input
    zle -R
    zle accept-line
    echo ""
    eval "$@"
}

function zle-ls {
    zle-eval l
}
zle -N zle-ls

function prepend-sudo {
  if [[ $BUFFER != "sudo "* ]]; then
    BUFFER="sudo $BUFFER"; CURSOR+=5
  fi
}
zle -N prepend-sudo

function zvm_vi_edit_command_line_custom() {
  local tmp_file=$(mktemp ${ZVM_TMPDIR}/zshXXXXXX.sh)
  echo "$BUFFER" >! "$tmp_file"
  "${(@Q)${(z)${ZVM_VI_EDITOR}}}" $tmp_file </dev/tty
  BUFFER=$(cat $tmp_file)
  rm "$tmp_file"
  case $ZVM_MODE in
    $ZVM_MODE_VISUAL|$ZVM_MODE_VISUAL_LINE)
      zvm_exit_visual_mode
      ;;
  esac
}

function before_init() {}
function after_init() {
    source <(fzf --zsh)
    eval "$(zoxide init zsh)"
    bindkey '\e;' autosuggest-accept
    zvm_define_widget zvm_vi_edit_command_line_custom
    zvm_bindkey visual 'v' edit-command-line
    bindkey '\el' zle-ls
    bindkey '\es' prepend-sudo
}

zvm_before_init_commands=(before_init)
zvm_after_init_commands=(after_init)

plugins=(
    zsh-autosuggestions
    zsh-vi-mode
)
for plugin in $plugins
do
    source "$ZSH_PLUGIN_DIR/$plugin/$plugin.zsh"
done

eval "$(direnv hook zsh)"
eval "$(starship init zsh)"

# MUST BE AT END
source "$ZSH_PLUGIN_DIR/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
